%% Import data from text file.
% Script for importing data from the following text file:
%
%    D:\Dropbox\Postdoc\Articles WIP\INFORMS RAS 2018 Problem Solving
%    Competition\Data\TimeTable.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/06/13 11:49:37

%% Initialize variables.
filename = [mainFolder 'TimeTable.csv'];
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
%	column6: text (%s)
%   column7: double (%f)
%	column8: text (%s)
%   column9: text (%s)
%	column10: text (%s)
%   column11: text (%s)
%	column12: text (%s)
%   column13: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%s%s%s%s%f%s%s%s%s%s%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,0.0,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Day = dataArray{:, 1};
Trainnumber = dataArray{:, 2};
Direction = dataArray{:, 3};
Location = dataArray{:, 4};
Abroad = dataArray{:, 5};
Activity = dataArray{:, 6};
Ordernumber = dataArray{:, 7};
PlannedTime = dataArray{:, 8};
TrainCharacteristic = dataArray{:, 9};
Pattern = dataArray{:, 10};
BareDrivingTime = dataArray{:, 11};
TractionType = dataArray{:, 12};
TimetableSpeed = dataArray{:, 13};


%% restructure data

Nrows = length(Day)
clear TT
tic
for ii = 1: Nrows 
    TT(ii).Day = Day{ii}(2:end-1);
    TT(ii).Trainnumber = str2double(Trainnumber{ii});
    TT(ii).Direction = Direction{ii}(2:end-1);
    TT(ii).Location = Location{ii}(2:end-1);
    TT(ii).Abroad = Abroad{ii}(2:end-1);
    TT(ii).Activity = Activity{ii}(2:end-1);
    TT(ii).Ordernumber = str2double(Ordernumber{ii});
    TT(ii).PlannedTime =PlannedTime{ii}(2:end-1);
    TT(ii).TrainCharacteristic =TrainCharacteristic{ii}(2:end-1);
    TT(ii).Pattern=str2double(Pattern{ii}(3:end-1));
    if isnan(str2double(BareDrivingTime{ii}(2:end-1)))
        BareDT = 0;
    else
        BareDT = str2double(BareDrivingTime{ii}(2:end-1));
    end
    TT(ii).BareDrivingTime = BareDT;
    TT(ii).TractionType = TractionType{ii}(2:end-1);
    TT(ii).TimetableSpeed = str2double(TimetableSpeed{ii});
end
toc

%% save TT

save('TT','TT')


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans 
clearvars Day Trainnumber Direction Location Abroad Activity Ordernumber PlannedTime TrainCharacteristic Pattern BareDrivingTime TractionType TimetableSpeed

